CREATE TYPE request_status AS ENUM (
  'TODO',
  'IN_PROGRESS',
  'COMPLETED'
);

CREATE TABLE senior_sync.request_types (
  id          BIGINT       GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name        VARCHAR      NOT NULL UNIQUE,
  description VARCHAR
);

CREATE TABLE senior_sync.senior_requests (
  id                BIGINT         GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  senior_id         BIGINT         NOT NULL REFERENCES senior_sync.seniors(id) ON DELETE CASCADE,
  assigned_staff_id BIGINT         REFERENCES senior_sync.staff(id) ON DELETE SET NULL,
  request_type_id   BIGINT         REFERENCES senior_sync.request_types(id),
  title             VARCHAR        NOT NULL,
  description       VARCHAR        NOT NULL,
  status            request_status NOT NULL DEFAULT 'TODO',
  priority          SMALLINT       NOT NULL DEFAULT 1,
  created_at        TIMESTAMPTZ    NOT NULL DEFAULT now(),
  updated_at        TIMESTAMPTZ    NOT NULL DEFAULT now(),
  completed_at      TIMESTAMPTZ
);

CREATE TRIGGER senior_requests_updated_at
  BEFORE UPDATE ON senior_sync.senior_requests
  FOR EACH ROW
  EXECUTE FUNCTION set_updated_at();

CREATE TABLE senior_sync.request_attachments (
  id               BIGINT       GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  request_id       BIGINT       NOT NULL REFERENCES senior_sync.senior_requests(id) ON DELETE CASCADE,
  file_url         VARCHAR      NOT NULL,
  uploaded_at      TIMESTAMPTZ  NOT NULL DEFAULT now()
);

-- KIV if seniors can possibly comment on their own requests (whatsapp/kiosk functionality?)
CREATE TABLE senior_sync.request_comments (
  id               BIGINT       GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  request_id       BIGINT       NOT NULL REFERENCES senior_sync.senior_requests(id) ON DELETE CASCADE,
  commenter_id     BIGINT       NOT NULL,
  commenter_type   VARCHAR      NOT NULL CHECK (commenter_type IN ('senior','staff')),
  comment          VARCHAR      NOT NULL,
  created_at       TIMESTAMPTZ  NOT NULL DEFAULT now()
);