name: Backend Spring Boot App CI

on:
  pull_request:
    branches:
      - main
  push:
    paths:
      - "backend/seniorsync/**"
      - ".github/workflows/backend-ci.yml"

env:
  JAVA_VERSION: 21

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
          cache: maven

      - name: Compile application
        working-directory: ./backend/seniorsync
        run: mvn compile

      # Skip tests for now as we don't have unit tests and the postgres setup for tests
      #   - name: Run tests
      #     working-directory: ./backend/seniorsync
      #     run: mvn test
      #     env:
      #       SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/seniorsync_test
      #       SPRING_DATASOURCE_USERNAME: postgres
      #       SPRING_DATASOURCE_PASSWORD: test

      - name: Package application
        working-directory: ./backend/seniorsync
        # Like above, we skip tests for now as we don't have unit tests and the postgres setup for tests
        run: mvn package -DskipTests
  backend-snyk-scan:
    name: Backend Snyk Scan
    runs-on: ubuntu-latest
    needs: [build-and-test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"
          cache: maven

      - name: Resolve dependencies (no tests)
        working-directory: ./backend/seniorsync
        run: mvn -q dependency:go-offline

      - name: Snyk test (backend)
        uses: snyk/actions/maven-3-jdk-21@master
        with:
          args: --file=backend/seniorsync/pom.xml --severity-threshold=high --json-file-output=backend-snyk.json
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Generate PR comment (backend Snyk summary)
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = 'backend-snyk.json';
            if (!fs.existsSync(path)) { core.warning('No Snyk JSON output found.'); return; }
            let raw = fs.readFileSync(path, 'utf8').trim();
            if (!raw) { core.warning('Empty Snyk JSON file'); return; }
            let data; try { data = JSON.parse(raw); } catch (e) { core.setFailed('Failed to parse Snyk JSON: '+e); return; }
            const results = Array.isArray(data) ? data : [data];
            let total = 0; let sevCounts = { critical:0, high:0, medium:0, low:0 }; let projNames = [];
            for (const r of results) {
              if (r.projectName) projNames.push(r.projectName);
              if (r.vulnerabilities) {
                total += r.vulnerabilities.length;
                for (const v of r.vulnerabilities) {
                  const s = (v.severity||'').toLowerCase();
                  if (sevCounts[s] !== undefined) sevCounts[s]++; }
              }
            }
            const summary = `Backend Snyk Scan Results\n\nProjects: ${[...new Set(projNames)].join(', ') || 'N/A'}\nTotal Issues: ${total}\nCritical: ${sevCounts.critical} | High: ${sevCounts.high} | Medium: ${sevCounts.medium} | Low: ${sevCounts.low}`;
            const body = `<!-- SNYK_BACKEND_REPORT -->\n### 🔐 Backend Snyk Report\n${summary}\n\n> This comment is updated on each run.`;
            const { owner, repo } = context.repo;
            const issue_number = context.payload.pull_request.number;
            const existing = await github.paginate(github.rest.issues.listComments, { owner, repo, issue_number });
            const prev = existing.find(c => c.body && c.body.startsWith('<!-- SNYK_BACKEND_REPORT -->'));
            if (prev) {
              await github.rest.issues.updateComment({ owner, repo, comment_id: prev.id, body });
            } else {
              await github.rest.issues.createComment({ owner, repo, issue_number, body });
            }

      - name: Snyk monitor (optional project snapshot)
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        uses: snyk/actions/maven-3-jdk-21@master
        with:
          command: monitor
          args: --file=backend/seniorsync/pom.xml
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
